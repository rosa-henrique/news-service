@page "/"
@using NewsService.Web.Services
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="container mt-4">
    <EditForm Model="@Model" OnValidSubmit="HandleSubmit">
        <!-- Outros campos do formulário -->
        <div class="col-md-6">
            <label class="form-label">Title*</label>
            <InputText @bind-Value="Model.Title" class="form-control" />
            <ValidationMessage For="@(() => Model.Title)" />
        </div>

        <div class="col-md-6">
            <label class="form-label">Body*</label>
            <InputTextArea @bind-Value="Model.Body" class="form-control" />
            <ValidationMessage For="@(() => Model.Body)" />
        </div>
        <FileUpload Label="Document"
                    AllowedTypes=".pdf,.docx"
                    MaxSizeMB="25"
                    OnFileUploaded="HandleFileUpload"
                    OnFileRemoved="HandleFileRemove" />

        <button type="submit" class="btn btn-primary">Enviar</button>
    </EditForm>
</div>

@code {
    private FormModel Model = new()
    {
        Title = "News title",
        Body = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum."
    };
    private string presignedUrl = "SUA_URL_AQUI";

    private async Task HandleSubmit()
    {
        
    }
    private void HandleFileUpload(IBrowserFile uploadedFile)
    {
        // Atualizar modelo com informações do arquivo
        if (uploadedFile != null)
        {
            Model.FileName = uploadedFile.Name;
            Model.FileSize = uploadedFile.Size;
        }
    }

    private void HandleFileRemove()
    {
        Model.FileName = null;
        Model.FileSize = 0;
    }

    private class FormModel
    {
        public string FileName { get; set; }
        public long FileSize { get; set; }
        public string Title { get; set; }
        public string Body { get; set; }
        // ... outros campos
    }
}